{"version":3,"sources":["webpack:///./src/common/components/divider/divider.tsx","webpack:///./src/common/components/blockquote/blockquote.tsx","webpack:///./src/pages/about/_components/_career.tsx","webpack:///./src/pages/about/_components/_about-me-blurb.tsx","webpack:///./src/pages/about/_components/_education.tsx","webpack:///./src/pages/about/_components/_content-blurb.tsx","webpack:///./src/pages/about/index.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"names":["Divider","styled","div","theme","colors","orange","transparentize","light_gray","Blockquote","children","className","BlockQuoteWithDivider","RotatedDivider","CareerBlurb","BlueLink","href","target","style","margin","a","blue","AboutMeBlurb","marginBottom","EducationBlurb","marginTop","Education","display","flexDirection","justifyContent","ContentBlurb","type","spring","useSpring","from","opacity","transform","to","config","mass","tension","friction","reset","Content","animated","white","circleItems","useState","headerType","setHeaderType","transitionedHeaderItems","useTransition","item","key","trail","enter","leave","FullHeightSection","textAlign","marginRight","textTransform","CircleWrapper","map","props","console","log","Circle","size","color","active","onClick","CircleHeaders","title","Section","mediaQuery","laptop","ul","li","h2","_objectDestructuringEmpty","obj","TypeError"],"mappings":"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","file":"component---src-pages-about-index-tsx-8e3cea6061dce95e5524.js","sourcesContent":["import { transparentize } from \"polished\";\nimport styled from \"styled-components\";\n\nexport const Divider = styled.div`\n  width: 100%;\n  height: 2px;\n  background: radial-gradient(\n    circle,\n    ${({ theme }) => theme.colors.orange} 0%,\n    ${({ theme }) => transparentize(1, theme.colors.light_gray)} 100%\n  );\n`;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { Divider } from \"../divider\";\n\ntype BlockquoteProps = {\n  children: React.ReactNode;\n  className?: string;\n};\n\nexport const Blockquote: FC<BlockquoteProps> = ({ children, className }) => {\n  return (\n    <BlockQuoteWithDivider className={className}>\n      <RotatedDivider />\n      <blockquote>{children}</blockquote>\n    </BlockQuoteWithDivider>\n  );\n};\n\nconst BlockQuoteWithDivider = styled.div`\n  display: grid;\n  grid-template-columns: 2px 1fr;\n  margin-bottom: 2rem;\n`;\n\nconst RotatedDivider = styled(Divider)`\n  width: 2px;\n  height: 100%;\n`;\n","import React from \"react\";\nimport { Blockquote } from \"common/components\";\nimport styled from \"styled-components\";\n\nexport const CareerBlurb = ({}) => {\n  return (\n    <div>\n      <p>\n        Back in October of 2019, I joined{\" \"}\n        <BlueLink href=\"https://cycle.io\" target=\"_blank\">\n          Cycle\n        </BlueLink>\n        .\n      </p>\n\n      <Blockquote>\n        <p>\n          Too many companies have been led down the path of believing they have\n          the same technical requirements as Fortune 100 enterprises, and we're\n          here to fix that.\n        </p>\n        <p>\n          Our goal is simple: enable developers to spend more time building\n          awesome products and less time managing infrastructure, pushing\n          deployments, and patching orchestrators.\n        </p>\n        <p style={{ margin: 0 }}>\n          -{\" \"}\n          <BlueLink href=\"https://cycle.io/platform/\" target=\"_blank\">\n            Platform\n          </BlueLink>\n        </p>\n      </Blockquote>\n\n      <p>\n        I help manage and maintain five different frontend applications and my\n        most recent noteworthy project has been developing the views/pages of\n        our now-rebranded site, check it out!\n      </p>\n\n      <h2>I've also written some blog posts!</h2>\n      <ul>\n        <li>\n          <BlueLink\n            href=\"https://cycle.io/blog/2020/02/thrown-into-the-fire---learning-containers-as-a-new-college-grad/\"\n            target=\"_blank\"\n          >\n            Thrown Into the Fire â€” Learning Containers as a New College Grad\n          </BlueLink>\n        </li>\n        <li>\n          <BlueLink\n            href=\"https://cycle.io/blog/2020/10/a-deep-dive-into-cycles-frontend-stack/\"\n            target=\"_blank\"\n          >\n            A Deep Dive Into Cycle's Frontend Stack\n          </BlueLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nconst BlueLink = styled.a`\n  color: ${({ theme }) => theme.colors.blue};\n`;\n","import { Divider } from \"common/components\";\nimport React from \"react\";\n\nexport const AboutMeBlurb = ({}) => {\n  return (\n    <div>\n      <Divider style={{ marginBottom: \"2rem\" }} />\n      <p>\n        From an early age, I was introduced to Halo by a friend and got hooked\n        into gaming. Like many, I got into Computer Science to build games, but\n        in doing so found a world of much more.\n      </p>\n      <p>\n        Through school, I learned just how vast the realm of CS is and\n        questioned what path I should take. Tesla was becoming more and more\n        popular and I saw what they were doing with Machine Learning and A.I; So\n        I made these my focus. I was drawn towards this path because I wanted to\n        help develop life-changing technologies that impact and shape the world\n        we live in.\n      </p>\n      <p>\n        Near the end of my schooling career, I was afforded an opportunity to\n        become a Frontend Software Engineer and in doing so have found that\n        there are more ways to impact and shape the world than disrupting the\n        automotive industry.\n      </p>\n      <Divider />\n    </div>\n  );\n};\n","import { Divider } from \"common/components\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nexport const EducationBlurb = ({}) => {\n  return (\n    <>\n      <h2 style={{ marginTop: 0 }}>University of Nevada, Reno</h2>\n      <Education>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-evenly\",\n          }}\n        >\n          <p>\n            I graduated in the winter of 2019 from the University of Nevada,\n            Reno with a Bachelors in Computer Science and Engineering and a\n            minor in Mathematics.\n          </p>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginBottom: \"2rem\",\n            }}\n          >\n            <Divider />\n          </div>\n\n          <p>\n            My coursework and area of interest was in Machine Learning and A.I.\n            For my Senior project, I worked as the primary front-end developer\n            on a team of three. Our goal was to refactor and rebuild from\n            scratch an in-use production application.\n          </p>\n        </div>\n      </Education>\n    </>\n  );\n};\n\nconst Education = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n`;\n","import React, { FC } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport styled from \"styled-components\";\nimport { CareerBlurb } from \"./_career\";\nimport { AboutMeBlurb } from \"./_about-me-blurb\";\nimport { EducationBlurb } from \"./_education\";\n\ninterface ContentBlurbProps {\n  type: BlurbType;\n}\n\nexport type BlurbType = \"about\" | \"education\" | \"career\";\n\nexport const ContentBlurb: FC<ContentBlurbProps> = ({ type }) => {\n  const spring = useSpring({\n    from: { opacity: 0, transform: \"translateY(5rem)\" },\n    to: { opacity: 1, transform: \"translateY(0)\" },\n    config: { mass: 1, tension: 280, friction: 60 },\n    reset: true,\n  });\n\n  return (\n    <Content style={spring}>\n      {type === \"about\" && <AboutMeBlurb />}\n      {type === \"education\" && <EducationBlurb />}\n      {type === \"career\" && <CareerBlurb />}\n    </Content>\n  );\n};\n\nconst Content = styled(animated.div)`\n  padding: 2rem;\n  position: relative;\n  width: 100%;\n  color: ${({ theme }) => theme.colors.white};\n`;\n","import React, { useState } from \"react\";\nimport { MenuLayout, Section } from \"common/layout\";\nimport styled from \"styled-components\";\nimport { ColorNames } from \"common/styles\";\nimport { animated, useTransition } from \"react-spring\";\nimport { BlurbType, ContentBlurb } from \"./_components/_content-blurb\";\n\nexport default () => {\n  const [headerType, setHeaderType] = useState<BlurbType>(\"about\");\n\n  const transitionedHeaderItems = useTransition(\n    circleItems,\n    (item) => item.key,\n    {\n      trail: 150,\n      from: { opacity: 0, transform: \"scale(0)\" },\n      enter: { opacity: 1, transform: \"scale(1)\" },\n      leave: { opacity: 0, transform: \"scale(0)\" },\n    }\n  );\n\n  return (\n    <MenuLayout>\n      <FullHeightSection>\n        <div>\n          <h1\n            style={{\n              textAlign: \"center\",\n              marginRight: \"6rem\",\n              textTransform: \"capitalize\",\n            }}\n          >\n            {headerType === \"about\" ? `About Me` : headerType}\n          </h1>\n          <CircleWrapper>\n            {transitionedHeaderItems.map(({ item, key, props }) => {\n              console.log(\"isActive\", item.key === headerType);\n              return (\n                <Circle\n                  size={item.size}\n                  color={item.color}\n                  active={item.key === headerType}\n                  key={key}\n                  style={props}\n                  onClick={() => setHeaderType(item.key)}\n                >\n                  <CircleHeaders>{item.title}</CircleHeaders>\n                </Circle>\n              );\n            })}\n          </CircleWrapper>\n        </div>\n        <ContentBlurb type={headerType} />\n      </FullHeightSection>\n    </MenuLayout>\n  );\n};\n\ntype ContentHeaderItemsT = {\n  size: number;\n  color: ColorNames;\n  title: string;\n  key: BlurbType;\n};\n\nconst circleItems: ContentHeaderItemsT[] = [\n  {\n    key: \"about\",\n    title: \"Who Am I?\",\n    size: 12,\n    color: \"light_teal\",\n  },\n  {\n    key: \"education\",\n    title: \"Education\",\n    size: 10,\n    color: \"orange\",\n  },\n  {\n    key: \"career\",\n    title: \"Career\",\n    size: 15,\n    color: \"blue\",\n  },\n];\n\nconst FullHeightSection = styled(Section)`\n  & > div {\n    min-height: calc(100vh - 24rem);\n    display: flex;\n    align-items: flex-start;\n    flex-direction: column;\n    padding-top: 4rem;\n\n    ${({ theme }) => theme.mediaQuery.laptop} {\n      align-items: center;\n      justify-content: space-between;\n      flex-direction: row;\n    }\n  }\n`;\n\nconst CircleWrapper = styled.ul`\n  display: flex;\n  margin-bottom: 2rem;\n\n  & > li:not(:last-child) {\n    margin-right: 1.5rem;\n  }\n\n  ${({ theme }) => theme.mediaQuery.laptop} {\n    margin-bottom: unset;\n    margin-right: 4rem;\n  }\n`;\n\nconst Circle = styled(animated.li)<{\n  size: number;\n  color: ColorNames;\n  active: boolean;\n}>`\n  height: ${({ size }) => `${size}rem`};\n  width: ${({ size }) => `${size}rem`};\n  background-color: ${({ theme, color }) => theme.colors[color]};\n  border-radius: 50%;\n  color: ${({ theme }) => theme.colors.white};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition-property: scale3d;\n  transition-duration: 0.25s;\n  transition-timing-function: ease-in-out;\n\n  ${({ active }) =>\n    active &&\n    `\n    transform: scale3d(1.1, 1.1, 1) !important;\n  `};\n`;\n\nconst CircleHeaders = styled.h2`\n  font-size: 1.7rem;\n  margin: 0;\n`;\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"sourceRoot":""}