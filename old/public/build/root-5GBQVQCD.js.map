{
  "version": 3,
  "sources": ["browser-route-module:/Users/kevincarlos/Documents/projects/kevin-carlos.github.io/app/root.tsx?browser", "../../app/root.tsx", "../../app/stitches/client.context.ts"],
  "sourcesContent": ["export { default, links, meta } from \"/Users/kevincarlos/Documents/projects/kevin-carlos.github.io/app/root.tsx\";", "import type { MetaFunction } from '@remix-run/cloudflare';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react';\nimport { useContext, useEffect, type ReactNode } from 'react';\nimport { useDarkMode } from './common/hooks/theme';\nimport ClientStyleContext from './stitches/client.context';\nimport styles from './tailwind.css';\nimport { ThemeCtx } from './ThemeContext';\n\nexport const links = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700;800;900&display=swap',\n    },\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap',\n    },\n    { rel: 'stylesheet', href: styles },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Kevin Carlos',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\ntype DocumentProps = {\n  children: ReactNode;\n  title?: string;\n};\n\nconst Document = ({ children, title }: DocumentProps) => {\n  const clientStyleData = useContext(ClientStyleContext);\n\n  const [themeMode, setThemeMode] = useDarkMode();\n\n  // Only executed on client\n  useEffect(() => {\n    // reset cache to re-apply global styles\n    clientStyleData.reset();\n  }, [clientStyleData]);\n\n  return (\n    <html lang=\"en\" className=\"h-full w-full\">\n      <head>\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n        <style\n          id=\"stitches\"\n          dangerouslySetInnerHTML={{ __html: clientStyleData.sheet }}\n          suppressHydrationWarning\n        />\n      </head>\n      <body className=\"h-full w-full bg-theme-white dark:bg-theme-black font-body overflow-hidden\">\n        <ThemeCtx.Provider value={{ mode: themeMode, setMode: setThemeMode }}>\n          {children}\n        </ThemeCtx.Provider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n};\n\nexport default function App() {\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  );\n}\n", "import { createContext } from 'react';\n\nexport type ClientStyleContextData = {\n  reset: () => void;\n  sheet: string;\n};\n\nexport const ClientStyleContext = createContext<ClientStyleContextData>({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  reset: () => {},\n  sheet: '',\n});\n\nexport default ClientStyleContext;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AASA,oBAAsD;;;ACTtD;AAAA,mBAA8B;AAOvB,IAAM,qBAAqB,gCAAsC;AAAA,EAEtE,OAAO,MAAM;AAAA;AAAA,EACb,OAAO;AAAA;AAGT,IAAO,yBAAQ;;;;;;ADER,IAAM,QAAQ,MAAM;AACzB,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,IAER;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,IAER,EAAE,KAAK,cAAc,MAAM;AAAA;AAAA;AAIxB,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAQZ,IAAM,WAAW,CAAC,EAAE,UAAU,YAA2B;AACvD,QAAM,kBAAkB,8BAAW;AAEnC,QAAM,CAAC,WAAW,gBAAgB;AAGlC,+BAAU,MAAM;AAEd,oBAAgB;AAAA,KACf,CAAC;AAEJ,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,IAAK,WAAU;AAAA,KACxB,oCAAC,QAAD,MACG,QAAQ,oCAAC,SAAD,MAAQ,SAAiB,MAClC,oCAAC,MAAD,OACA,oCAAC,OAAD,OACA,oCAAC,SAAD;AAAA,IACE,IAAG;AAAA,IACH,yBAAyB,EAAE,QAAQ,gBAAgB;AAAA,IACnD,0BAAwB;AAAA,OAG5B,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,SAAS,UAAV;AAAA,IAAmB,OAAO,EAAE,MAAM,WAAW,SAAS;AAAA,KACnD,WAEH,oCAAC,mBAAD,OACA,oCAAC,SAAD,OACA,oCAAC,YAAD;AAAA;AAMO,eAAe;AAC5B,SACE,oCAAC,UAAD,MACE,oCAAC,QAAD;AAAA;",
  "names": []
}
