{
  "version": 3,
  "sources": ["browser-route-module:/Users/kevincarlos/Documents/projects/kevin-carlos.github.io/app/routes/projects/index.tsx?browser", "../../../../app/routes/projects/index.tsx", "../../../../app/common/ui-elements/cards/index.ts", "../../../../app/common/ui-elements/cards/card.tsx", "../../../../app/common/ui-elements/cards/card-list.tsx", "../../../../app/routes/projects/project-items.tsx"],
  "sourcesContent": ["export { default } from \"/Users/kevincarlos/Documents/projects/kevin-carlos.github.io/app/routes/projects/index.tsx\";", "import { Layout } from '~/common/layout';\nimport { Card, CardList } from '~/common/ui-elements';\nimport { styled } from '~/stitches';\nimport { projectItems } from './project-items';\n\nconst ProjectsLayout = styled('div', {\n  height: '100%',\n  width: '100%',\n  padding: '40px 20px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nconst Wrapper = styled('div', {\n  width: '70rem',\n  margin: '0 auto',\n});\n\nconst Heading = styled('h1', {\n  fontSize: '60px',\n  color: '$headerText',\n  margin: '0 auto',\n  marginBottom: '20px',\n});\n\nexport default function Index() {\n  return (\n    <Layout>\n      <ProjectsLayout>\n        <Wrapper>\n          <Heading>Projects</Heading>\n          <CardList>\n            {projectItems.map((project) => (\n              <Card key={project.name} title={project.name} to={project.path}>\n                {project.description}\n              </Card>\n            ))}\n          </CardList>\n        </Wrapper>\n      </ProjectsLayout>\n    </Layout>\n  );\n}\n", "export { Card } from './card';\nexport { CardList } from './card-list';\n", "import { Link } from '@remix-run/react';\nimport { type FC } from 'react';\nimport { styled } from '~/stitches';\n\nconst CardListItem = styled('li', {\n  'padding': '16px',\n  'position': 'relative',\n  'cursor': 'pointer',\n  'transition': 'transform 200ms ease-out',\n\n  'backgroundColor': '$cardBg',\n  // TODO...how with stitches\n  // 'bg-opacity-40',\n\n  'border': '1px solid $dteal',\n  'borderRadius': '6px',\n\n  'boxShadow': '4px 4px 6px rgba(0, 0, 0, 0.2)',\n\n  '&::before': {\n    content: '',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n\n    width: '100%',\n    height: '4px',\n    backgroundColor: '$cardHighlight',\n\n    borderTopLeftRadius: '6px',\n    borderTopRightRadius: '6px',\n  },\n\n  '&:hover': {\n    transform: 'scale(1.02)',\n  },\n});\n\nconst MaybeLinkedContent: FC<{ to?: string }> = ({ to, children }) => {\n  if (!to) {\n    return <>{children}</>;\n  } else if (to.includes('http')) {\n    return <a href={to}>{children}</a>;\n  }\n\n  return <Link to={to}>{children}</Link>;\n};\n\ntype CardProps = {\n  title: string;\n  to?: string;\n};\n\nexport const Card: FC<CardProps> = ({ title, to, children }) => {\n  return (\n    <CardListItem>\n      <MaybeLinkedContent to={to}>\n        <>\n          <h1 className=\"text-xl mb-5 tracking-wider\">{title}</h1>\n          {children}\n        </>\n      </MaybeLinkedContent>\n    </CardListItem>\n  );\n};\n", "import { type FC } from 'react';\n\nexport const CardList: FC = ({ children }) => {\n  return (\n    <ul className=\"grid gap-5 md:grid-cols-auto-fit-card dark:text-theme-white\">\n      {children}\n    </ul>\n  );\n};\n", "import { type ReactChild } from 'react';\nimport { links } from '~/common/links';\n\ntype ProjectItem = {\n  name: string;\n  description: ReactChild;\n  path: string;\n};\n\nexport const projectItems: ProjectItem[] = [\n  {\n    name: 'Loot Crates',\n    description: (\n      <p>\n        An interactive loot crate system built to learn and understand the\n        inner-workings of loot boxes.\n      </p>\n    ),\n    path: links.projects().project().lootCrate(),\n  },\n  {\n    name: 'Loaders',\n    description: <p>Building loading spinners / indicators for fun.</p>,\n    path: links.projects().project().loaders(),\n  },\n];\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;;;ACAA;;;ACAA;;;ACAA;AAIA,IAAM,eAAe,OAAO,MAAM;AAAA,EAChC,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,cAAc;AAAA,EAEd,mBAAmB;AAAA,EAInB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAEhB,aAAa;AAAA,EAEb,aAAa;AAAA,IACX,SAAS;AAAA,IACT,UAAU;AAAA,IACV,KAAK;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,IAEP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,iBAAiB;AAAA,IAEjB,qBAAqB;AAAA,IACrB,sBAAsB;AAAA;AAAA,EAGxB,WAAW;AAAA,IACT,WAAW;AAAA;AAAA;AAIf,IAAM,qBAA0C,CAAC,EAAE,IAAI,eAAe;AACpE,MAAI,CAAC,IAAI;AACP,WAAO,0DAAG;AAAA,aACD,GAAG,SAAS,SAAS;AAC9B,WAAO,oCAAC,KAAD;AAAA,MAAG,MAAM;AAAA,OAAK;AAAA;AAGvB,SAAO,oCAAC,MAAD;AAAA,IAAM;AAAA,KAAS;AAAA;AAQjB,IAAM,OAAsB,CAAC,EAAE,OAAO,IAAI,eAAe;AAC9D,SACE,oCAAC,cAAD,MACE,oCAAC,oBAAD;AAAA,IAAoB;AAAA,KAClB,0DACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAA+B,QAC5C;AAAA;;;AC5DX;AAEO,IAAM,WAAe,CAAC,EAAE,eAAe;AAC5C,SACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX;AAAA;;;ACLP;AASO,IAAM,eAA8B;AAAA,EACzC;AAAA,IACE,MAAM;AAAA,IACN,aACE,oCAAC,KAAD,MAAG;AAAA,IAKL,MAAM,MAAM,WAAW,UAAU;AAAA;AAAA,EAEnC;AAAA,IACE,MAAM;AAAA,IACN,aAAa,oCAAC,KAAD,MAAG;AAAA,IAChB,MAAM,MAAM,WAAW,UAAU;AAAA;AAAA;;;AJlBrC,IAAM,iBAAiB,OAAO,OAAO;AAAA,EACnC,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,EACT,SAAS;AAAA,EACT,gBAAgB;AAAA,EAChB,YAAY;AAAA;AAGd,IAAM,UAAU,OAAO,OAAO;AAAA,EAC5B,OAAO;AAAA,EACP,QAAQ;AAAA;AAGV,IAAM,UAAU,OAAO,MAAM;AAAA,EAC3B,UAAU;AAAA,EACV,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,cAAc;AAAA;AAGD,iBAAiB;AAC9B,SACE,oCAAC,QAAD,MACE,oCAAC,gBAAD,MACE,oCAAC,SAAD,MACE,oCAAC,SAAD,MAAS,aACT,oCAAC,UAAD,MACG,aAAa,IAAI,CAAC,YACjB,oCAAC,MAAD;AAAA,IAAM,KAAK,QAAQ;AAAA,IAAM,OAAO,QAAQ;AAAA,IAAM,IAAI,QAAQ;AAAA,KACvD,QAAQ;AAAA;",
  "names": []
}
