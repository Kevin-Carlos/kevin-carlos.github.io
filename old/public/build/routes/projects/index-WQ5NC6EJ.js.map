{
  "version": 3,
  "sources": ["browser-route-module:/Users/kevincarlos/Documents/projects/kevin-carlos.github.io/app/routes/projects/index.tsx?browser", "../../../../app/routes/projects/index.tsx", "../../../../app/common/ui-elements/cards/index.ts", "../../../../app/common/ui-elements/cards/card.tsx", "../../../../app/common/ui-elements/cards/card-list.tsx", "../../../../app/routes/projects/project-items.tsx"],
  "sourcesContent": ["export { default } from \"/Users/kevincarlos/Documents/projects/kevin-carlos.github.io/app/routes/projects/index.tsx\";", "import { Layout } from '~/common/layout';\nimport { Card, CardList } from '~/common/ui-elements';\nimport { projectItems } from './project-items';\n\nexport default function Index() {\n  return (\n    <Layout>\n      <div className=\"h-full w-full px-5 pt-10 flex justify-center align-center\">\n        <div className=\"w-[70rem] mx-auto\">\n          <h1 className=\"text-6xl dark:text-theme-white mx-auto mb-5\">\n            Projects\n          </h1>\n          <CardList>\n            {projectItems.map((project) => (\n              <Card key={project.name} title={project.name} to={project.path}>\n                {project.description}\n              </Card>\n            ))}\n          </CardList>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n", "export { Card } from './card';\nexport { CardList } from './card-list';\n", "import { Link } from '@remix-run/react';\nimport clsx from 'clsx';\nimport { type FC } from 'react';\n\nconst MaybeLinkedContent: FC<{ to?: string }> = ({ to, children }) => {\n  if (!to) {\n    return <>{children}</>;\n  } else if (to.includes('http')) {\n    return <a href={to}>{children}</a>;\n  }\n\n  return <Link to={to}>{children}</Link>;\n};\n\ntype CardProps = {\n  title: string;\n  to?: string;\n};\n\nexport const Card: FC<CardProps> = ({ title, to, children }) => {\n  return (\n    <li\n      style={{ boxShadow: '4px 4px 6px rgba(0, 0, 0, 0.2)' }}\n      className={clsx([\n        // general\n        'p-4',\n        'relative',\n        'hover:scale-[1.02]',\n        'transition-transform',\n        'ease-out',\n        'cursor-pointer',\n\n        // backgrounds\n        'bg-theme-lteal2',\n        'bg-opacity-40',\n        'dark:bg-theme-black',\n\n        // Border\n        'border-[1px]',\n        'rounded-md',\n        'border-theme-dteal',\n        'border-solid',\n\n        // Absolutely positioned, colored top bar\n        \"before:content-['']\",\n        'before:absolute',\n        'before:top-0',\n        'before:left-0',\n        'before:right-0',\n        'before:w-full',\n        'before:bg-theme-black',\n        'before:dark:bg-theme-orange',\n        'before:h-1',\n        'before:rounded-tl-md',\n        'before:rounded-tr-md',\n      ])}\n    >\n      <MaybeLinkedContent to={to}>\n        <>\n          <h1 className=\"text-xl mb-5 tracking-wider\">{title}</h1>\n          {children}\n        </>\n      </MaybeLinkedContent>\n    </li>\n  );\n};\n", "import { type FC } from 'react';\n\nexport const CardList: FC = ({ children }) => {\n  return (\n    <ul className=\"grid gap-5 md:grid-cols-auto-fit-card dark:text-theme-white\">\n      {children}\n    </ul>\n  );\n};\n", "import { type ReactChild } from 'react';\nimport { links } from '~/common/links';\n\ntype ProjectItem = {\n  name: string;\n  description: ReactChild;\n  path: string;\n};\n\nexport const projectItems: ProjectItem[] = [\n  {\n    name: 'Loot Crates',\n    description: (\n      <p>\n        An interactive loot crate system built to learn and understand the\n        inner-workings of loot boxes.\n      </p>\n    ),\n    path: links.projects().project().lootCrate(),\n  },\n  {\n    name: 'Loaders',\n    description: <p>Building loading spinners / indicators for fun.</p>,\n    path: links.projects().project().loaders(),\n  },\n];\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;;;ACAA;;;ACAA;;;ACAA;AAIA,IAAM,qBAA0C,CAAC,EAAE,IAAI,eAAe;AACpE,MAAI,CAAC,IAAI;AACP,WAAO,0DAAG;AAAA,aACD,GAAG,SAAS,SAAS;AAC9B,WAAO,oCAAC,KAAD;AAAA,MAAG,MAAM;AAAA,OAAK;AAAA;AAGvB,SAAO,oCAAC,MAAD;AAAA,IAAM;AAAA,KAAS;AAAA;AAQjB,IAAM,OAAsB,CAAC,EAAE,OAAO,IAAI,eAAe;AAC9D,SACE,oCAAC,MAAD;AAAA,IACE,OAAO,EAAE,WAAW;AAAA,IACpB,WAAW,eAAK;AAAA,MAEd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MAGA;AAAA,MACA;AAAA,MACA;AAAA,MAGA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MAGA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,KAGF,oCAAC,oBAAD;AAAA,IAAoB;AAAA,KAClB,0DACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAA+B,QAC5C;AAAA;;;AC5DX;AAEO,IAAM,WAAe,CAAC,EAAE,eAAe;AAC5C,SACE,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX;AAAA;;;ACLP;AASO,IAAM,eAA8B;AAAA,EACzC;AAAA,IACE,MAAM;AAAA,IACN,aACE,oCAAC,KAAD,MAAG;AAAA,IAKL,MAAM,MAAM,WAAW,UAAU;AAAA;AAAA,EAEnC;AAAA,IACE,MAAM;AAAA,IACN,aAAa,oCAAC,KAAD,MAAG;AAAA,IAChB,MAAM,MAAM,WAAW,UAAU;AAAA;AAAA;;;AJnBtB,iBAAiB;AAC9B,SACE,oCAAC,QAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAA8C,aAG5D,oCAAC,UAAD,MACG,aAAa,IAAI,CAAC,YACjB,oCAAC,MAAD;AAAA,IAAM,KAAK,QAAQ;AAAA,IAAM,OAAO,QAAQ;AAAA,IAAM,IAAI,QAAQ;AAAA,KACvD,QAAQ;AAAA;",
  "names": []
}
