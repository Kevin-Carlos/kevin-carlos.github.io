{
  "version": 3,
  "sources": ["../../app/entry.client.tsx", "../../app/stitches/index.ts", "../../app/stitches/client.context.ts"],
  "sourcesContent": ["import { RemixBrowser } from '@remix-run/react';\nimport { useCallback, useState, type ReactNode } from 'react';\nimport { hydrate } from 'react-dom';\nimport { ClientStyleContext, getCssText } from './stitches';\n\ntype ClientCacheProviderProps = {\n  children: ReactNode;\n};\n\nfunction ClientCacheProvider({ children }: ClientCacheProviderProps) {\n  const [sheet, setSheet] = useState(getCssText());\n\n  const reset = useCallback(() => {\n    setSheet(getCssText());\n  }, []);\n\n  return (\n    <ClientStyleContext.Provider value={{ reset, sheet }}>\n      {children}\n    </ClientStyleContext.Provider>\n  );\n}\n\nhydrate(\n  <ClientCacheProvider>\n    <RemixBrowser />\n  </ClientCacheProvider>,\n  document\n);\n", "export {\n  ClientStyleContext,\n  type ClientStyleContextData,\n} from './client.context';\nexport * from './stitches.config';\n", "import { createContext } from 'react';\n\nexport type ClientStyleContextData = {\n  reset: () => void;\n  sheet: string;\n};\n\nconst ClientStyleContext = createContext<ClientStyleContextData>({\n  reset: () => null,\n  sheet: '',\n});\n\nexport { ClientStyleContext };\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;AACA,oBAAsD;AACtD,uBAAwB;;;ACFxB;;;ACAA;AAAA,mBAA8B;AAO9B,IAAM,qBAAqB,gCAAsC;AAAA,EAC/D,OAAO,MAAM;AAAA,EACb,OAAO;AAAA;;;AFAT,6BAA6B,EAAE,YAAsC;AACnE,QAAM,CAAC,OAAO,YAAY,4BAAS;AAEnC,QAAM,QAAQ,+BAAY,MAAM;AAC9B,aAAS;AAAA,KACR;AAEH,SACE,oCAAC,mBAAmB,UAApB;AAAA,IAA6B,OAAO,EAAE,OAAO;AAAA,KAC1C;AAAA;AAKP,8BACE,oCAAC,qBAAD,MACE,oCAAC,cAAD,QAEF;",
  "names": []
}
